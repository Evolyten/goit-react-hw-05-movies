{"version":3,"file":"static/js/770.58af5c19.chunk.js","mappings":"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","sources":["components/services/fetchApi.js","pages/Home/HomeContentStyled.jsx","components/PagesItem/PagesItem.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=71b9c1ee751ada432ef4ae5fbbdff5cd';\n\nexport async function fetchTrendsFilmAndAddToState() {\n  try {\n    const trendsFilm = await axios.get(\n      `${BASE_URL}/trending/movie/week?${API_KEY}`\n    );\n    const normalizeData = dataNormalizeMoviesList(trendsFilm.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMoviesByNameAndAddToState(filter) {\n  try {\n    const moviesByName = await axios.get(\n      `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${filter}&page=1&include_adult=false`\n    );\n    const normalizeData = dataNormalizeMoviesList(moviesByName.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieByIdAndAddToState(id) {\n  try {\n    const movieById = await axios.get(\n      `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieById(movieById.data);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieCastByIdAndAddToState(id) {\n  try {\n    const castById = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieCast(castById.data.cast);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieReviewsByIdAndAddToState(id) {\n  try {\n    const movieReviews = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=71b9c1ee751ada432ef4ae5fbbdff5cd&language=en-US&page=1`\n    );\n\n    const normalizeData = dataNormalizeReviewsById(movieReviews.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nfunction dataNormalizeMoviesList(array) {\n  const normalizeData = array.map(movieInfo => {\n    return {\n      id: movieInfo.id,\n      title: movieInfo.title,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieById(object) {\n  const normalizeData = {\n    title: object.title,\n    overview: object.overview,\n    vote_average: object.vote_average,\n    genres: object.genres,\n    release_date: object.release_date,\n    poster_path: object.poster_path,\n  };\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieCast(array) {\n  const normalizeData = array.map(castInfo => {\n    return {\n      cast_id: castInfo.cast_id,\n      name: castInfo.name,\n      profile_path: castInfo.profile_path,\n      character: castInfo.character,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeReviewsById(array) {\n  const normalizeData = array.map(reviewInfo => {\n    return {\n      id: reviewInfo.id,\n      author: reviewInfo.author,\n      content: reviewInfo.content,\n    };\n  });\n  return normalizeData;\n}\n","import styled from \"styled-components\";\n\nexport const HomeList = styled.ul`\nmargin:20px 0 0 20px\n`\n\n\nexport const HomeItem = styled.li`\nmargin:0 0 10px 0;\n\n`\n\n\n\n\n\n\n\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { HomeItem } from '../../pages/Home/HomeContentStyled';\nimport PropTypes from 'prop-types';\n\nexport default function PagesItem({ movieInfo, wayToDetailMovieInfo }) {\n  const location = useLocation();\n  const { id, title } = movieInfo;\n  return (\n    <HomeItem key={id}>\n      <NavLink to={`${wayToDetailMovieInfo}`} state={{ from: location }}>\n        {title}\n      </NavLink>\n    </HomeItem>\n  );\n}\n\nPagesItem.propTypes = {\n  movieInfo: PropTypes.object,\n  wayToDetailMovieInfo: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { HomeList } from './HomeContentStyled';\nimport { fetchTrendsFilmAndAddToState } from '../../components/services/fetchApi';\nimport PagesItem from 'components/PagesItem/PagesItem';\nconst HomeContent = () => {\n  const [trend, setTrends] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await fetchTrendsFilmAndAddToState();\n      setTrends(data);\n    };\n    fetch();\n  }, []);\n\n  return (\n    <HomeList>\n      {trend.map(trendFilm => (\n        <PagesItem\n          key={trendFilm.id}\n          movieInfo={trendFilm}\n          wayToDetailMovieInfo={`/movies/${trendFilm.id}`}\n        />\n      ))}\n    </HomeList>\n  );\n};\n\nexport default HomeContent;\n"],"names":["BASE_URL","API_KEY","fetchTrendsFilmAndAddToState","axios","trendsFilm","normalizeData","dataNormalizeMoviesList","data","results","console","log","toast","message","fetchMoviesByNameAndAddToState","filter","moviesByName","fetchMovieByIdAndAddToState","id","movieById","dataNormalizeMovieById","fetchMovieCastByIdAndAddToState","castById","dataNormalizeMovieCast","cast","fetchMovieReviewsByIdAndAddToState","movieReviews","dataNormalizeReviewsById","array","map","movieInfo","title","object","overview","vote_average","genres","release_date","poster_path","castInfo","cast_id","name","profile_path","character","reviewInfo","author","content","HomeList","styled","HomeItem","PagesItem","wayToDetailMovieInfo","location","useLocation","to","state","from","useState","trend","setTrends","useEffect","fetch","trendFilm"],"sourceRoot":""}