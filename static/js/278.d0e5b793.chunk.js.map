{"version":3,"file":"static/js/278.d0e5b793.chunk.js","mappings":"yTAGMA,EAAW,+BACXC,EAAU,2CAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEsBC,EAAAA,EAAAA,IAAA,UACpBH,EADoB,gCACYC,IAHlC,cAEGG,EAFH,OAKGC,EAAgBC,EAAwBF,EAAWG,KAAKC,SAL3D,kBAMIH,GANJ,gCAQHI,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UATlB,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8CC,GAA9C,kGAEwBX,EAAAA,EAAAA,IAAA,UACtBH,EADsB,yBACGC,EADH,iCACmCa,EADnC,gCAFxB,cAEGC,EAFH,OAKGV,EAAgBC,EAAwBS,EAAaR,KAAKC,SAL7D,kBAMIH,GANJ,gCAQHI,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UATlB,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2CC,GAA3C,kGAEqBd,EAAAA,EAAAA,IAAA,UACnBH,EADmB,kBACDiB,EADC,YACKhB,EADL,oBAFrB,cAEGiB,EAFH,OAKGb,EAAgBc,EAAuBD,EAAUX,MALpD,kBAMIF,GANJ,gCAQHI,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UATlB,gFAaA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+CH,GAA/C,kGAEoBd,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAiB,EADA,oBACchB,EADd,oBAFpB,cAEGoB,EAFH,OAKGhB,EAAgBiB,EAAuBD,EAASd,KAAKgB,MALxD,kBAMIlB,GANJ,gCAQHI,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UATlB,gFAaA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAAkDP,GAAlD,kGAEwBd,EAAAA,EAAAA,IAAA,UACtBH,EADsB,kBACJiB,EADI,4EAFxB,cAEGQ,EAFH,OAMGpB,EAAgBqB,EAAyBD,EAAalB,KAAKC,SAN9D,kBAOIH,GAPJ,gCASHI,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,UAAe,KAAMC,UAVlB,gFAcP,SAASN,EAAwBqB,GAO/B,OANsBA,EAAMC,KAAI,SAAAC,GAC9B,MAAO,CACLZ,GAAIY,EAAUZ,GACda,MAAOD,EAAUC,MAEpB,GAEF,CAED,SAASX,EAAuBY,GAS9B,MARsB,CACpBD,MAAOC,EAAOD,MACdE,SAAUD,EAAOC,SACjBC,aAAcF,EAAOE,aACrBC,OAAQH,EAAOG,OACfC,aAAcJ,EAAOI,aACrBC,YAAaL,EAAOK,YAGvB,CAED,SAASd,EAAuBK,GAS9B,OARsBA,EAAMC,KAAI,SAAAS,GAC9B,MAAO,CACLC,QAASD,EAASC,QAClBC,KAAMF,EAASE,KACfC,aAAcH,EAASG,aACvBC,UAAWJ,EAASI,UAEvB,GAEF,CAED,SAASf,EAAyBC,GAQhC,OAPsBA,EAAMC,KAAI,SAAAc,GAC9B,MAAO,CACLzB,GAAIyB,EAAWzB,GACf0B,OAAQD,EAAWC,OACnBC,QAASF,EAAWE,QAEvB,GAEF,C,yKC3GKC,EAAa,OAEbC,EAASC,EAAAA,KAAaC,MAAM,CAChCT,KAAMQ,EAAAA,KAAaE,SAAS,+BAmE9B,UAhEoB,WAAO,IAAD,EACxB,GAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAMIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYT,KANtBU,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,UACaC,EALf,EAKED,UAAaC,OAITC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAEMnD,EAASkD,EAAYE,IAAI,UAEzBC,EAAe,SAAAC,GACdA,EAAK,KAAaC,QACvBJ,EAAe,CAAEnD,OAAQsD,EAAK,KAAaC,QAC5C,EAqBD,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKxD,EAAL,CACA,IAAMyD,EAAK,mCAAG,qGACO1D,EAAAA,EAAAA,IAA+BC,GADtC,WACNP,EADM,QAEFiE,OAFE,uBAGV7D,EAAAA,GAAAA,MAAA,kBAAuBG,EAAvB,qBAHU,0BAMZsC,EAAQ7C,GANI,2CAAH,qDAQXgE,GATmB,CAUpB,GAAE,CAACzD,KAEJwD,EAAAA,EAAAA,YAAU,WACJX,EAAUc,oBACZf,EAAM,CAAEnB,KAAM,IAEjB,GAAE,CAACoB,EAAWD,KAGb,iCACE,kBAAMgB,SAAUjB,EAAaU,GAA7B,WACE,kBAAOQ,KAAK,YAEZ,0BACEC,SAAU,SAAAC,GAAC,OAAIV,EAAaU,EAAEC,OAAOV,MAA1B,GACPZ,EAASX,EAAY,CAAEI,UAAU,OAEvC,iCAAIW,EAAOrB,YAAX,aAAI,EAAa3B,cAEnB,wBACGuC,EAAMvB,KAAI,SAAAmD,GAAW,OACpB,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAY9D,IAAMgE,MAAO,CAAEC,KAAMrB,GAAjD,SACGkB,EAAYjD,SAFRiD,EAAY9D,GADD,QAU7B,C","sources":["components/services/fetchApi.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=71b9c1ee751ada432ef4ae5fbbdff5cd';\n\nexport async function fetchTrendsFilmAndAddToState() {\n  try {\n    const trendsFilm = await axios.get(\n      `${BASE_URL}/trending/movie/week?${API_KEY}`\n    );\n    const normalizeData = dataNormalizeMoviesList(trendsFilm.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMoviesByNameAndAddToState(filter) {\n  try {\n    const moviesByName = await axios.get(\n      `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${filter}&page=1&include_adult=false`\n    );\n    const normalizeData = dataNormalizeMoviesList(moviesByName.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieByIdAndAddToState(id) {\n  try {\n    const movieById = await axios.get(\n      `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieById(movieById.data);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieCastByIdAndAddToState(id) {\n  try {\n    const castById = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieCast(castById.data.cast);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieReviewsByIdAndAddToState(id) {\n  try {\n    const movieReviews = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=71b9c1ee751ada432ef4ae5fbbdff5cd&language=en-US&page=1`\n    );\n\n    const normalizeData = dataNormalizeReviewsById(movieReviews.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nfunction dataNormalizeMoviesList(array) {\n  const normalizeData = array.map(movieInfo => {\n    return {\n      id: movieInfo.id,\n      title: movieInfo.title,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieById(object) {\n  const normalizeData = {\n    title: object.title,\n    overview: object.overview,\n    vote_average: object.vote_average,\n    genres: object.genres,\n    release_date: object.release_date,\n    poster_path: object.poster_path,\n  };\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieCast(array) {\n  const normalizeData = array.map(castInfo => {\n    return {\n      cast_id: castInfo.cast_id,\n      name: castInfo.name,\n      profile_path: castInfo.profile_path,\n      character: castInfo.character,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeReviewsById(array) {\n  const normalizeData = array.map(reviewInfo => {\n    return {\n      id: reviewInfo.id,\n      author: reviewInfo.author,\n      content: reviewInfo.content,\n    };\n  });\n  return normalizeData;\n}\n","import { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchMoviesByNameAndAddToState } from 'components/services/fetchApi';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport toast from 'react-hot-toast';\n\nimport * as Yup from 'yup';\nconst INPUT_NAME = 'name';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Please enter your request'),\n});\n\nconst MovieSearch = () => {\n  const [films, setFils] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const location = useLocation();\n  const [searchParam, setSearchParam] = useSearchParams();\n\n  const filter = searchParam.get('filter');\n\n  const changeFilter = value => {\n    if (!value[INPUT_NAME].trim()) return;\n    setSearchParam({ filter: value[INPUT_NAME].trim() });\n  };\n\n  useEffect(() => {\n    if (!filter) return;\n    const fetch = async () => {\n      const data = await fetchMoviesByNameAndAddToState(filter);\n      if (!data.length) {\n        toast.error(`In this ${filter} request no find`);\n        return;\n      }\n      setFils(data);\n    };\n    fetch();\n  }, [filter]);\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset({ name: '' });\n    }\n  }, [formState, reset]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(changeFilter)}>\n        <input type=\"submit\" />\n\n        <input\n          onChange={e => changeFilter(e.target.value)}\n          {...register(INPUT_NAME, { required: true })}\n        />\n        <p>{errors.name?.message}</p>\n      </form>\n      <ul>\n        {films.map(requestFilm => (\n          <li key={requestFilm.id}>\n            <NavLink to={`${requestFilm.id}`} state={{ from: location }}>\n              {requestFilm.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieSearch;\n"],"names":["BASE_URL","API_KEY","fetchTrendsFilmAndAddToState","axios","trendsFilm","normalizeData","dataNormalizeMoviesList","data","results","console","log","toast","message","fetchMoviesByNameAndAddToState","filter","moviesByName","fetchMovieByIdAndAddToState","id","movieById","dataNormalizeMovieById","fetchMovieCastByIdAndAddToState","castById","dataNormalizeMovieCast","cast","fetchMovieReviewsByIdAndAddToState","movieReviews","dataNormalizeReviewsById","array","map","movieInfo","title","object","overview","vote_average","genres","release_date","poster_path","castInfo","cast_id","name","profile_path","character","reviewInfo","author","content","INPUT_NAME","schema","Yup","shape","required","useState","films","setFils","useForm","resolver","yupResolver","register","handleSubmit","reset","formState","errors","location","useLocation","useSearchParams","searchParam","setSearchParam","get","changeFilter","value","trim","useEffect","fetch","length","isSubmitSuccessful","onSubmit","type","onChange","e","target","requestFilm","to","state","from"],"sourceRoot":""}