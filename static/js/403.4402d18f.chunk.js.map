{"version":3,"file":"static/js/403.4402d18f.chunk.js","mappings":"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","sources":["components/Cast/CastStyle.jsx","components/CastListItem/CastListItem.jsx","components/Cast/Cast.jsx","components/services/fetchApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n// width:100%;\npadding: 20px;\n`\n\n\nexport const CastItem = styled.li`\nmargin:10px;\n`\nexport const CastImg = styled.img`\nwidth:300px;\nheight:auto`\n\nexport const TextWrap = styled.p`\nword-break: break-all;`","import { CastImg, CastItem, TextWrap } from '../Cast/CastStyle';\nimport PropTypes from 'prop-types';\nfunction photoLink(str) {\n  if (!str) {\n    return '#';\n  }\n  let baseImageUrl = 'https://image.tmdb.org/t/p/w500';\n  return baseImageUrl + str;\n}\n\nexport default function CastListItem({ castItemActor }) {\n  const { cast_id, profile_path, character, name } = castItemActor;\n  return (\n    <CastItem key={cast_id}>\n      <CastImg src={photoLink(profile_path)} alt={name} loading=\"lazy\" />\n      <h3>{name}</h3>\n      <TextWrap>Character: {character}</TextWrap>\n    </CastItem>\n  );\n}\n\nCastListItem.propTypes = {\n  castItemActor: PropTypes.object,\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { CastList } from './CastStyle';\nimport { fetchMovieCastByIdAndAddToState } from 'components/services/fetchApi';\nimport CastListItem from 'components/CastListItem/CastListItem';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await fetchMovieCastByIdAndAddToState(movieId);\n      setCast(data);\n    };\n    fetch();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.length !== 0 ? (\n        cast.map(n => {\n          return <CastListItem key={n.cast_id} castItemActor={n} />;\n        })\n      ) : (\n        <div>No info about cast</div>\n      )}\n    </CastList>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=71b9c1ee751ada432ef4ae5fbbdff5cd';\n\nexport async function fetchTrendsFilmAndAddToState() {\n  try {\n    const trendsFilm = await axios.get(\n      `${BASE_URL}/trending/movie/week?${API_KEY}`\n    );\n    const normalizeData = dataNormalizeMoviesList(trendsFilm.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMoviesByNameAndAddToState(filter) {\n  try {\n    const moviesByName = await axios.get(\n      `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${filter}&page=1&include_adult=false`\n    );\n    const normalizeData = dataNormalizeMoviesList(moviesByName.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieByIdAndAddToState(id) {\n  try {\n    const movieById = await axios.get(\n      `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieById(movieById.data);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieCastByIdAndAddToState(id) {\n  try {\n    const castById = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieCast(castById.data.cast);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieReviewsByIdAndAddToState(id) {\n  try {\n    const movieReviews = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=71b9c1ee751ada432ef4ae5fbbdff5cd&language=en-US&page=1`\n    );\n\n    const normalizeData = dataNormalizeReviewsById(movieReviews.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nfunction dataNormalizeMoviesList(array) {\n  const normalizeData = array.map(movieInfo => {\n    return {\n      id: movieInfo.id,\n      title: movieInfo.title,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieById(object) {\n  const normalizeData = {\n    title: object.title,\n    overview: object.overview,\n    vote_average: object.vote_average,\n    genres: object.genres,\n    release_date: object.release_date,\n    poster_path: object.poster_path,\n  };\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieCast(array) {\n  const normalizeData = array.map(castInfo => {\n    return {\n      cast_id: castInfo.cast_id,\n      name: castInfo.name,\n      profile_path: castInfo.profile_path,\n      character: castInfo.character,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeReviewsById(array) {\n  const normalizeData = array.map(reviewInfo => {\n    return {\n      id: reviewInfo.id,\n      author: reviewInfo.author,\n      content: reviewInfo.content,\n    };\n  });\n  return normalizeData;\n}\n"],"names":["CastList","styled","CastItem","CastImg","TextWrap","photoLink","str","CastListItem","castItemActor","cast_id","profile_path","character","name","src","alt","loading","movieId","useParams","useState","cast","setCast","useEffect","fetch","fetchMovieCastByIdAndAddToState","data","length","map","n","BASE_URL","API_KEY","fetchTrendsFilmAndAddToState","axios","trendsFilm","normalizeData","dataNormalizeMoviesList","results","console","log","toast","message","fetchMoviesByNameAndAddToState","filter","moviesByName","fetchMovieByIdAndAddToState","id","movieById","dataNormalizeMovieById","castById","dataNormalizeMovieCast","fetchMovieReviewsByIdAndAddToState","movieReviews","dataNormalizeReviewsById","array","movieInfo","title","object","overview","vote_average","genres","release_date","poster_path","castInfo","reviewInfo","author","content"],"sourceRoot":""}