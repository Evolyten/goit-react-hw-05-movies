{"version":3,"file":"static/js/877.22eac3a2.chunk.js","mappings":"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","sources":["components/Film/FillmStyled.jsx","components/FilmItem/FilmItem.jsx","components/Film/Film.jsx","components/services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageWrap = styled.div`\n  padding: 20px 0;\n`;\nexport const ContentWrap = styled.div`\n  display: flex;\n  padding: 10px 20px;\n`;\n\nexport const FilmPoster = styled.img`\n  width: 300px;\n  height: auto;\n  margin: 0 40px 0 0;\n`;\n\nexport const TextWrap = styled.span`\n  margin: 0 10px 0 0;\n`;\n\nexport const AdditInfo = styled.div`\n  padding: 20px;\n  border: 1px solid black;\n`;\n","import { ContentWrap, FilmPoster, TextWrap } from '../Film/FillmStyled';\nimport PropTypes from 'prop-types';\n\nexport default function FilmItem({ filmInformation }) {\n  const { title, overview, vote_average, genres, release_date, poster_path } =\n    filmInformation;\n  return (\n    <ContentWrap>\n      {poster_path ? (\n        <FilmPoster\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt=\"\"\n        />\n      ) : (\n        <p>No Img</p>\n      )}\n      <div>\n        <h2>\n          {title}({new Date(release_date).getFullYear()})\n        </h2>\n        <p>User Score: {Math.floor(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        {genres ? (\n          <p>\n            {genres.map(n => (\n              <TextWrap key={n.id}>{n.name}</TextWrap>\n            ))}\n          </p>\n        ) : (\n          <p>No genres</p>\n        )}\n      </div>\n    </ContentWrap>\n  );\n}\n\nFilmItem.propTypes = {\n  filmInformation: PropTypes.object,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { PageWrap, AdditInfo } from './FillmStyled';\nimport { fetchMovieByIdAndAddToState } from 'components/services/fetchApi';\nimport FilmItem from 'components/FilmItem/FilmItem';\nimport styled from 'styled-components';\n\nconst NavSecond = styled(NavLink)`\n  display: block;\n  color: black;\n\n  &.active {\n    color: red;\n  }\n`;\n\nconst Film = () => {\n  const { movieId } = useParams();\n  const [filmInfo, setFilmInfo] = useState({});\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await fetchMovieByIdAndAddToState(movieId);\n      setFilmInfo(data);\n    };\n    fetch();\n  }, [movieId]);\n\n  return (\n    <PageWrap>\n      <NavLink to={location.state.from}>Go Back</NavLink>\n      <FilmItem filmInformation={filmInfo} />\n      <AdditInfo>\n        <h3>Additional information</h3>\n        <NavSecond state={{ from: location.state.from }} to={'cast'}>\n          Cast\n        </NavSecond>\n        <NavSecond state={{ from: location.state.from }} to={'reviews'}>\n          Reviews\n        </NavSecond>\n      </AdditInfo>\n      <Outlet />\n    </PageWrap>\n  );\n};\n\nexport default Film;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=71b9c1ee751ada432ef4ae5fbbdff5cd';\n\nexport async function fetchTrendsFilmAndAddToState() {\n  try {\n    const trendsFilm = await axios.get(\n      `${BASE_URL}/trending/movie/week?${API_KEY}`\n    );\n    const normalizeData = dataNormalizeMoviesList(trendsFilm.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMoviesByNameAndAddToState(filter) {\n  try {\n    const moviesByName = await axios.get(\n      `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${filter}&page=1&include_adult=false`\n    );\n    const normalizeData = dataNormalizeMoviesList(moviesByName.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieByIdAndAddToState(id) {\n  try {\n    const movieById = await axios.get(\n      `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieById(movieById.data);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieCastByIdAndAddToState(id) {\n  try {\n    const castById = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n    );\n    const normalizeData = dataNormalizeMovieCast(castById.data.cast);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nexport async function fetchMovieReviewsByIdAndAddToState(id) {\n  try {\n    const movieReviews = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=71b9c1ee751ada432ef4ae5fbbdff5cd&language=en-US&page=1`\n    );\n\n    const normalizeData = dataNormalizeReviewsById(movieReviews.data.results);\n    return normalizeData;\n  } catch (error) {\n    console.log(error);\n    toast.error(`${error.message}`);\n  }\n}\n\nfunction dataNormalizeMoviesList(array) {\n  const normalizeData = array.map(movieInfo => {\n    return {\n      id: movieInfo.id,\n      title: movieInfo.title,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieById(object) {\n  const normalizeData = {\n    title: object.title,\n    overview: object.overview,\n    vote_average: object.vote_average,\n    genres: object.genres,\n    release_date: object.release_date,\n    poster_path: object.poster_path,\n  };\n  return normalizeData;\n}\n\nfunction dataNormalizeMovieCast(array) {\n  const normalizeData = array.map(castInfo => {\n    return {\n      cast_id: castInfo.cast_id,\n      name: castInfo.name,\n      profile_path: castInfo.profile_path,\n      character: castInfo.character,\n    };\n  });\n  return normalizeData;\n}\n\nfunction dataNormalizeReviewsById(array) {\n  const normalizeData = array.map(reviewInfo => {\n    return {\n      id: reviewInfo.id,\n      author: reviewInfo.author,\n      content: reviewInfo.content,\n    };\n  });\n  return normalizeData;\n}\n"],"names":["PageWrap","styled","ContentWrap","FilmPoster","TextWrap","AdditInfo","FilmItem","filmInformation","title","overview","vote_average","genres","release_date","poster_path","src","alt","Date","getFullYear","Math","floor","map","n","name","id","NavSecond","NavLink","movieId","useParams","useState","filmInfo","setFilmInfo","location","useLocation","useEffect","fetch","fetchMovieByIdAndAddToState","data","to","state","from","BASE_URL","API_KEY","fetchTrendsFilmAndAddToState","axios","trendsFilm","normalizeData","dataNormalizeMoviesList","results","console","log","toast","message","fetchMoviesByNameAndAddToState","filter","moviesByName","movieById","dataNormalizeMovieById","fetchMovieCastByIdAndAddToState","castById","dataNormalizeMovieCast","cast","fetchMovieReviewsByIdAndAddToState","movieReviews","dataNormalizeReviewsById","array","movieInfo","object","castInfo","cast_id","profile_path","character","reviewInfo","author","content"],"sourceRoot":""}